---
import { ReferentialMeasurement } from '@/components/system/ReferentialMeasurement';

import { TITLE, DESCRIPTION, IMAGE } from '@/constants/meta';

import Footer from '@/features/Footer/index.astro';
import Header from '@/features/Header/index.astro';

import '@/styles/globals.css';
import '@/styles/changelog.css';

export interface Props {
  title?: string;
  url: string;
}

const { title, url } = Astro.props;
const _title = title ? `${title} - ${TITLE}` : TITLE;
---

<!DOCTYPE html>
<html lang="ja">
  <head prefix="og:http://ogp.me/ns#">
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="manifest" href="/favicons/site.webmanifest" />
    <link rel="mask-icon" href="/favicons/safari-pinned-tab.svg" color="#222222" />
    <meta name="msapplication-TileColor" content="#222222" />
    <meta name="msapplication-config" content="/favicons/browserconfig.xml" />
    <meta name="theme-color" content="#222222" />
    <meta name="generator" content={Astro.generator} />
    <title>{_title}</title>
    <meta content={DESCRIPTION} name="description" />
    <meta property="og:title" content={_title} />
    <meta property="og:description" content={DESCRIPTION} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:image" content={IMAGE} />
    <meta property="og:site_name" content={_title} />
    <meta name="twitter:site" content="@RyoTa___0222" />
    <meta name="twitter:card" content="summary_large_image" />
    <link rel="canonical" href={url} />
  </head>
  <body class="bg-white dark:bg-dark">
    <ReferentialMeasurement client:load />
    <Header />
    <slot />
    <Footer />
    <script>
      // バッジがあれば削除
      if (typeof navigator !== 'undefined' && 'clearAppBadge' in navigator) {
        (navigator as any)
          .clearAppBadge()
          .then(() => {})
          .catch((err: any) => console.log(err));
      }
    </script>
  </body>
</html>

{
  /* **********
TIPS: グローバルなスタイリングは`is:global`をつける
***************/
}
<style is:global>
  :root {
    --accent: 124, 58, 237;
    --accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
  }
  html {
    font-family: system-ui, sans-serif;
  }
  .scroll-animation-icon-wrapper path {
    stroke: #d4d4d8;
  }

  html.dark .scroll-animation-icon-wrapper path {
    stroke: #71717a;
  }
  .sns-animation-icon-wrapper path {
    stroke: #78716c;
  }
  html.dark .sns-animation-icon-wrapper path {
    stroke: #d6d3d1;
  }
  .loading-animation-icon-wrapper path {
    fill: #78716c;
    stroke: #78716c;
  }
  .notification-animation-icon-wrapper path {
    stroke: white;
  }
  .notification-animation-icon-wrapper.gray path {
    stroke: #cecece;
  }
  html.dark .loading-animation-icon-wrapper path {
    fill: #d6d3d1;
    stroke: #d6d3d1;
  }
</style>
